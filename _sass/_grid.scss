// layouts for all sections, using susy grid plugin


// -------- general --------

$susy:(
  columns: 12,
  container: 100%,
  global-box-sizing: border-box,
  gutters: 0,
);
$gutters:( gutters: 1, );
$margin: 2em;


// -------- grid sections --------

// .section--padding {
//   padding-top: 5.063em;
//   padding-bottom: 5.063em;
//   @include bp( large ) {
//     padding-top: 6.192em;
//     padding-bottom: 6.192em;
//   }
// }

.section--padding-top {
  padding-top: 3em;
  @include bp( large ){
    padding-top: 6em;
  }
}

// not sure if this is actually used?
.section--padding {
  padding-top: 6em;
  padding-bottom: 6em;
}

.row {
  @include container( $xxlarge );
  position: relative;
  & + .row { margin-top: $margin; }
}

.row--padding {
  padding-left: $margin;
  padding-right: $margin;
}
.row--margin {
  margin-left: ( $margin / 2 );
  margin-right: ( $margin / 2 );
  @include bp( medium ) {
    margin-left: $margin;
    margin-right: $margin;
  }
}

.row__column + .row__column {
  margin-top: ( $margin / 2 );
  @include bp( large ) {
    margin-top: 0;
  }
}

// only works for 2 column grids (might change class name)
.row--column-padding > {
  .row__column {
    &:nth-child(odd){
      padding-top: ( $margin * 1.5 );
      padding-bottom: ( $margin / 2 );
    }
    &:nth-child(even){
      padding-top: ( $margin / 2 );
      padding-bottom: ( $margin * 1.5 );
    }
    @include bp( large ){
      &:nth-child(even),
      &:nth-child(odd) {
        padding-top: 2em;
        padding-bottom: 2em;
      }
    }
  }
  // not sure if needed, will check content to see if this causes problems
  .row__column + .row__column {
    margin-top: 0;
  }
}

// similar to "row--column-padding" but overlaps the image column
.column-overlap {
  .row__column:nth-child(odd) {
    margin-top: 0;
    padding-top: ( $margin * 1.5 );
    padding-bottom: ( $margin / 2 );
  }
  .row__column:nth-child(even) {
    margin-top: 0;
    padding-top: ( $margin / 2 );
    padding-bottom: ( $margin * 1.5 );
  }
  @include bp( large ){
    .row__column:nth-child(odd),
    .row__column:nth-child(even) {
      padding-top: $margin;
      padding-bottom: $margin;
    }
  }
  @include bp( xxlarge ){
    margin-bottom: 2.933em;
    .column-overlap__image:nth-child(n) {
      padding-top: 0;
      padding-bottom: 0;
      margin-top: 2.933em;
      margin-bottom: -2.933em;
    }
  }
}

.row--images {
  .row__column + .row__column {
    margin-top: 0;
  }
}

.bg-color-correct {
  padding-top: 1px; margin-top: -1px; // fix for parent inheriting child margin
}


// -------- two col grid mixin --------
// creates two columns in 12 column grid with optional gutters
// column number scheme e.g.  6-6 = 50% 50%    4-8 = 33% x 66%
@mixin two-column-grid( $col1, $col2, $has-gutters: null ) {
  > .row__column {
    @if $has-gutters {
      @include span( $gutters $col1 );
    } @else {
      @include span( $col1 );
    }
  }
  > .row__column:nth-child( even ) {
    @if $has-gutters {
      @include span( $gutters last $col2 );
    } @else {
       @include span( last $col2 );
    }
  }
}


// -------- grid columns --------

// breakpoint for all columns
@include bp(large){

  // two columns without gutter
  .row--columns-4-8 { @include two-column-grid( 4, 8 ); }
  .row--columns-5-7 { @include two-column-grid( 5, 7 ); }
  .row--columns-6-6 { @include two-column-grid( 6, 6 ); }
  .row--columns-7-5 { @include two-column-grid( 7, 5 ); }
  .row--columns-8-4 { @include two-column-grid( 8, 4 ); }

  // two columns with gutter
  .row--columns-4-8-gutters { @include two-column-grid( 4, 8, gutters ); }
  .row--columns-5-7-gutters { @include two-column-grid( 5, 7, gutters ); }
  .row--columns-6-6-gutters { @include two-column-grid( 6, 6, gutters ); }
  .row--columns-7-5-gutters { @include two-column-grid( 7, 5, gutters ); }
  .row--columns-8-4-gutters { @include two-column-grid( 8, 4, gutters ); }

  // three columns without gutter
  .row--columns-4-4-4 .row__column { @include gallery(4); }

  // three columns with gutter
  .row--columns-4-4-4-gutters .row__column {
    @include gallery($gutters 4);
    margin-bottom: gutter();
  }

  // vertical align floated columns
  .row--columns-vertical-align {
    display: flex;
    align-items: center;
  }

}